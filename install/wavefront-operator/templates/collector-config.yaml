{{- if .Values.collector.enabled }}
# wavefront_collector_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "wavefront-operator.collector.fullname" . }}-config
data:
  collector.yaml: |
    clusterName: {{ .Values.clusterName }}
    enableDiscovery: {{ .Values.collector.discovery.enabled }}

    sinks:
    {{- if .Values.collector.useProxy }}
    {{- if .Values.collector.proxyAddress }}
    - proxyAddress: {{ .Values.collector.proxyAddress }}
    {{- else }}
    {{- if .Values.proxy.metricPort }}
    - proxyAddress: {{ template "wavefront-operator.proxy.fullname" . }}:{{ .Values.proxy.metricPort }}
    {{- else }}
    - proxyAddress: {{ template "wavefront-operator.proxy.fullname" . }}:2878
    {{- end }}
    {{- end }}
    {{- else }}
    - server: {{ .Values.wavefront.url }}
      token: {{ .Values.wavefront.token }}
    {{- end }}

    {{- if .Values.collector.tags }}
      tags:
{{ tpl (toYaml .Values.collector.tags) . | indent 8 }}
    {{- end }}

    sources:
      kubernetes_source:
        {{- if .Values.collector.useReadOnlyPort }}
        url:
        kubeletPort: 10255
        kubeletHttps: false
        {{- else }}
        url: https://kubernetes.default.svc
        kubeletPort: 10250
        kubeletHttps: true
        {{- end }}
        {{- if .Values.serviceAccount.create }}
        useServiceAccount: true
        {{- else }}
        useServiceAccount: false
        {{- end }}
        insecure: true
        prefix: kubernetes.
        filters:
          metricBlacklist:
          - 'kubernetes.sys_container.*'
          - 'kubernetes.node.ephemeral_storage.*'

      internal_stats_source:
        prefix: 'kubernetes.'

      {{- if .Values.collector.apiServerMetrics }}
      # Kubernetes API Server
      prometheus_sources:
      - url: https://kubernetes.default.svc.cluster.local:443/metrics
        httpConfig:
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
        prefix: kube.apiserver.
        filters:
          metricWhitelist:
          - 'kube.apiserver.apiserver.*'
          - 'kube.apiserver.etcd.*'
          - 'kube.apiserver.process.*'
      {{- end }}

      telegraf_sources:
      # collect host level metrics
      - plugins: []

    {{- if .Values.collector.discovery.enabled }}
    discovery:
      discovery_interval: 15m
      plugins:
      - name: redis
        type: telegraf/redis
        selectors:
          images:
          - 'redis:*'
          - '*redis*'
        port: 6379
        scheme: "tcp"
        conf: |
          servers = ["${server}"]
      - name: memcached
        type: telegraf/memcached
        selectors:
          images:
          - 'memcached:*'
        port: 11211
        conf: |
          servers = ["${host}:${port}"]
      - name: kube-dns-discovery
        type: prometheus
        selectors:
          labels:
            k8s-app:
            - kube-dns
        port: 10054
        path: /metrics
        scheme: http
        prefix: kube.dns.

    {{- if .Values.collector.discovery.config }}
    # user supplied discovery config
{{ tpl (toYaml .Values.collector.discovery.config) . | indent 6 }}
    {{- end }}
    {{- end }}
{{- end }}
